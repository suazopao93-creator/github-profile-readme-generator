
C√≥digo
package gestiondepilas;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;


public class GestionDePilas {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Stack<String> rampa = new Stack<>();
        Stack<String> maniobra = new Stack<>();
        List<String> registro = new ArrayList<>();

        int opcion;
        do {
            System.out.println("\n=== SIMULADOR DE MUELLE (Rampa LIFO) ===");
            System.out.println("1. Ingresar cami√≥n");
            System.out.println("2. Avanzar servicio (atender cima)");
            System.out.println("3. Retirar cami√≥n por ID");
            System.out.println("4. Mostrar estado de pilas");
            System.out.println("5. Mostrar registro de operaciones");
            System.out.println("6. Salir");
            System.out.print("Elija una opci√≥n: ");
            opcion = sc.nextInt();
            sc.nextLine(); // limpiar buffer

            switch (opcion) {
                case 1: // INGRESAR
                    System.out.print("Ingrese ID del cami√≥n: ");
                    String idCamion = sc.nextLine();
                    rampa.push(idCamion);
                    registro.add("Ingres√≥ cami√≥n: " + idCamion);
                    System.out.println("‚úÖ Cami√≥n " + idCamion + " ingres√≥ a la rampa.");
                    break;

                case 2: // AVANZAR SERVICIO
                    if (!rampa.isEmpty()) {
                        String camionAtendido = rampa.pop();
                        registro.add("Cami√≥n atendido (carga/descarga): " + camionAtendido);
                        System.out.println("‚úÖ Cami√≥n " + camionAtendido + " fue atendido y retirado de la rampa.");
                    } else {
                        System.out.println("‚ö†Ô∏è No hay camiones en la rampa.");
                    }
                    break;

                case 3: // RETIRAR POR ID
                    System.out.print("Ingrese ID del cami√≥n a retirar: ");
                    String idRetiro = sc.nextLine();
                    boolean encontrado = false;

                    while (!rampa.isEmpty()) {
                        String cima = rampa.peek();
                        if (cima.equals(idRetiro)) {
                            rampa.pop();
                            registro.add("Cami√≥n retirado: " + idRetiro);
                            System.out.println("‚úÖ Cami√≥n " + idRetiro + " retirado de la rampa.");
                            encontrado = true;
                            break;
                        } else {
                            maniobra.push(rampa.pop());
                        }
                    }

                    // devolver los camiones de maniobra a rampa
                    while (!maniobra.isEmpty()) {
                        rampa.push(maniobra.pop());
                    }

                    if (!encontrado) {
                        System.out.println("‚ö†Ô∏è El cami√≥n con ID " + idRetiro + " no se encontr√≥ en la rampa.");
                    }
                    break;

                case 4: // MOSTRAR PILAS
                    System.out.println("üìå Rampa: " + rampa);
                    System.out.println("üìå Maniobra: " + maniobra);
                    break;

                case 5: // MOSTRAR REGISTRO
                    System.out.println("üìñ Registro de operaciones:");
                    for (String log : registro) {
                        System.out.println(" - " + log);
                    }
                    break;

                case 6:
                    System.out.println("üëã Saliendo del simulador...");
                    break;

                default:
                    System.out.println("‚ùå Opci√≥n inv√°lida.");
            }
        } while (opcion != 6);
    }
    
}
